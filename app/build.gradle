apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def keystorePropertiesFile = rootProject.file("app/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    ndkVersion rootProject.ext.ndkVersion

    defaultConfig {
        applicationId "me.zhang.workbench"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "CUSTOM_STRING", "\"${project.hasProperty("customString") ? project.property("customString").toString() : ''}\"")
        buildConfigField "boolean", "CUSTOM_BOOLEAN", "${project.hasProperty("customBoolean") && project.property("customBoolean").toString()}"
    }

    signingConfigs {
        debugConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debugConfig

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        // Build with ./gradlew app:installDebug -Pminify
        def minified = project.hasProperty('minify')
        debug {
            signingConfig signingConfigs.debugConfig

            minifyEnabled minified
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/jniLibs'
    }

    externalNativeBuild {
        ndkBuild {
            path file('src/main/cpp/Android.mk')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.2'

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // https://github.com/google/flexbox-layout
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    // https://github.com/google/gson
//    implementation 'com.google.code.gson:gson:2.8.9'
    implementation group: "com.google.code.gson", name: "gson", version: "2.9.1"
    implementation 'com.google.android.material:material:1.7.0'

    // https://github.com/android/android-ktx
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def activity_version = "1.6.1"

    // Java language implementation
    implementation "androidx.activity:activity:$activity_version"
    // Kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"

    def fragment_version = '1.5.4'

    // Java language implementation
    implementation "androidx.fragment:fragment:$fragment_version"
    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // https://github.com/google/dagger
    def dagger_version = "2.42"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    // https://github.com/google/guava
    implementation("com.google.guava:guava:31.1-android")
}